[{"help": {
  "area": null,
  "name": "help",
  "filename": "help.are",
  "pages": [
    {
      "keyword": "QMCONFIG",
      "text": "Syntax: qmconfig [show|ansiprompt|ansicolor|telnetga] [on|off]\n
              |\n
              |        This command is used to set options developed in the\n
              |        QuickMUD source. They include:\n
              |\n
              |        ansicolor  - do new logins have color on by default?\n
              |        ansiprompt - do new logins see a \"color?\" prompt?\n
              |        show       - show current settings of qmconfig variables\n
              |        telnetga   - do new logins have telnetga enabled?\n"
    },
    {
      "keyword": "COLOUR COLOR ANSI",
      "text": "Syntax: colour    Toggles colour mode on/off\n
              |\n
              |        You may also talk in colour; the format is like this:\n
              |        the 'escape character' to specify a colour is the left\n
              |        handed brace '{{', following\n
              |        that you should use one of the following letters,  \n
              |        {r{{r     red      {c{{c     cyan\n
              |        {g{{g     green    {y{{y     yellow\n
              |        {b{{b     blue     {w{{w     white\n
              |        {m{{m     magenta  {x{{x     clear(reset colour)\n
              |        {{{{     {{ char   {{*     beep\n
              |        {{/     newline\n
              |        When using colour, it looks better if you finish the line\n
              |        with whatever colour it would normally be in, such as a\n
              |        gossip, the colour is magenta, so:\n
              |                {mLope gossips '{ghello,{r world{m'{x\n
              |        looks better than:\n
              |                {mLope gossips '{ghello,{r world'{x\n
              |\n
              |        ColoUr is written by Lope (ant@solace.mh.se)\n"
    },
    {
      "keyword": "COLOUR2 COLOR2 ANSI2",
      "text": "Syntax: colour <field> <colour>\n
              |\n
              |        You may configure your colour setting for personal preference.\n
              |        current setting are indicated by colour.\n
              |\n
              |fields are:                                    \n
              |  {ttext         {aauction      {dgossip       {emusic        {qquestion\n
              |  {fanswer       {hclass_text   {Hclass_name   {iimmtalk_text\n
              |\n
              |{Iimmtalk_type\n
              |  {jinfo         {ktell         {lreply        {ngtell_text   {Ngtell_type\n
              |  {Zwiznet       {sroom_title   {Sroom_text    {oroom_exits\n
              |\n
              |{Oroom_things\n
              |  {pprompt       {1fight_death  {2fight_yhit   {3fight_ohit   {4fight_thit\n
              |  {5fight_skill{x\n
              |\n
              |   colours are: ( Hi- )\n
              |   {rred          {ggreen        {bblue         {yyellow       {mmagenta\n
              |   {ccyan         {wwhite{x\n
              |\n
              |eg. to make the gossip channel red type 'colour gossip red'\n
              |    to make your hits in fights magenta type 'colour fight_yhit magenta'\n"
    },
    {
      "keyword": "DIKU",
      "text": ".                    Original game idea, concept, and design:\n
              |\n
              |          Katja Nyboe               [Superwoman] (katz@freja.diku.dk)\n
              |          Tom Madsen              [Stormbringer] (noop@freja.diku.dk)\n
              |          Hans Henrik Staerfeldt           [God] (bombman@freja.diku.dk)\n
              |          Michael Seifert                 [Papi] (seifert@freja.diku.dk)\n
              |          Sebastian Hammer               [Quinn] (quinn@freja.diku.dk)\n
              |\n
              |\n
              |Developed at: DIKU -- The Department of Computer Science\n
              |                      at the University of Copenhagen.\n
              |\n
              |\n",
      "hide_keywords": true
    },
    {
      "keyword": "GOLD SILVER MONEY",
      "text": "Midgaard's economy is based on gold and silver coinage (and the lowly copper,\n
              |which you as an adventurer are far too proud to carry).  Gold coins are worth\n
              |100 silver coins, but are also four times as heavy (25 to the pound, as \n
              |opposed to 100 to the pound for silver). Gems can be bought to alleviate weight problems\n
              |from the Midgaard jeweller, he charges a mere 10% more than they are worth.\n
              |10 gems weigh one pound, and they can be worth more than 100 gold pieces for\n
              |the highest quality stones.\n",
      "hide_keywords": true
    },
    {
      "keyword": "BRIEF COMPACT",
      "text": "Brief and compact help set your display options for the game. Typing brief\n
              |toggles on and off the showing of room descriptions when you move around\n
              |(considerably reducing the text to be processed), and typing compact \n
              |removes the extra blank line before your prompt.\n"
    },
    {
      "keyword": "DEAF",
      "text": "The deaf toggle turns off incoming tells, helpfull if you are being bombarded\n
              |by messages from other players.  You can still use reply (see 'help reply') to\n
              |reply to people who were telling you before you went deaf, although you\n
              |cannot reply to a deaf person unless you or they are a diety (it's mostly \n
              |useful for sending a quick \"I'm being spammed so I went deaf\" message to\n
              |a person).\n",
      "hide_keywords": true
    },
    {
      "keyword": "AFK",
      "text": "Typing AFK puts your character in a tell-saving mode as follows: any tell\n
              |to you is stored in a special buffer, and can be seen later by typing\n
              |recall.  This is useful when you need to leave the mud for 5 or 10 minutes,\n
              |but don't want to miss tells.  AFK shows up in your prompt until it is\n
              |turned off.\n
              |\n
              |Tells to link-dead players are stored in a similar fashion, and can also be\n
              |seen by typing replay (unless, of course, the character logs off before\n
              |reading them).\n",
      "hide_keywords": true
    },
    {
      "keyword": "PROMPT",
      "text": "Syntax: prompt\n
              |Syntax: prompt show\n
              |Syntax: prompt all\n
              |Syntax: prompt <%*>\n
              | \n
              |PROMPT with out an argument will turn your prompt on or off.\n
              |\n
              |PROMPT SHOW will print your current prompt string.\n
              | \n
              |PROMPT ALL will give you the standard \"<hits mana moves>\" prompt.\n
              | \n
              |PROMPT <%*> where the %* are the various variables you may set yourself.\n
              | \n
              |        %h :  Display your current hits\n
              |        %H :  Display your maximum hits\n
              |        %m :  Display your current mana\n
              |        %M :  Display your maximum mana\n
              |        %v :  Display your current moves\n
              |        %V :  Display your maximum moves\n
              |        %x :  Display your current experience\n
              |        %X :  Display experience to level\n
              |        %g :  Display your gold held\n
              |        %s :  Display silver carried\n
              |        %a :  Display your alignment\n
              |        %r :  Display the room name you are in\n
              |        %e :  Display the exits from the room in NESWDU style\n
              |        %c :  Display a carriage return (useful for multi-line prompts)\n
              |        %R :  Display the vnum you are in (IMMORTAL ONLY)\n
              |        %z :  Display the area name you are in (IMMORTAL ONLY)\n
              | \n
              |Example:  PROMPT <%hhp %mm %vmv>\n
              |        Will set your prompt to \"<10hp 100m 100mv>\"\n
              | \n",
      "hide_keywords": true
    },
    {
      "keyword": "SUMMARY",
      "text": "MOVEMENT                            GROUP\n
              |north south east west up down       follow group gtell split\n
              |exits recall\n
              |sleep wake rest stand\n
              |\n
              |OBJECTS                             INFORMATION / COMMUNICATION\n
              |get put drop give sacrifice         help credits commands areas\n
              |wear wield hold                     report score time weather where who\n
              |recite quaff zap brandish           description password title\n
              |lock unlock open close pick         bug idea typo\n
              |inventory equipment look compare    gossip cgossip say shout tell yell\n
              |eat drink fill                      emote pose\n
              |list buy sell value                 note\n
              |\n
              |COMBAT                              OTHER\n
              |kill flee kick rescue disarm        ! save quit\n
              |backstab cast wimpy                 practice train\n
              |\n
              |\n
              |For more help, type 'help <topic>' for any command, skill, or spell.\n
              |Also help on: DAMAGE DEATH EXPERIENCE NEWS STORY TICK WIZLIST\n",
      "hide_keywords": true
    },
    {
      "keyword": "DEATH",
      "text": "When your character dies, you are reincarnated back at the Altar of the Temple\n
              |of Midgaard.  Your corpse is left behind in the room where you were killed,\n
              |together with all of your equipment.\n
              |\n
              |Any spells which were affecting you are canceled by death.\n
              |\n
              |Following and groups are not affected by death.\n
              |\n
              |You lose experience points for dying.  The amount you lose is two-thirds of \n
              |the way back to the beginning of your level.\n
              |\n
              |Corpses decay after time, and the objects inside corpses decay with them.\n
              |Player corpses last *roughly* 30 hours of game time (15 minutes of real time).\n
              |Only the player who died, or someone in the same group, can retrieve objects\n
              |from a player's corpse.\n
              |\n"
    },
    {
      "keyword": "EXPERIENCE LEVEL XP",
      "text": "Your character advances in power by gaining experience.  You need a set \n
              |amount of experience points for each level based on your creation points.\n
              |\n
              |You gain experience by:\n
              |\n
              |    being part of a group that kills a monster\n
              |\n
              |You lose experience by:\n
              |\n
              |    fleeing from combat\n
              |    recalling out of combat\n
              |    being the target of certain spells\n
              |    dying\n
              |\n
              |The experience you get from a kill depends on several things: how many players\n
              |are in your group; your level versus the level of the monster; your alignment\n
              |versus the monster's alignment; how many of this monster have been killed\n
              |lately; and some random variation.\n"
    },
    {
      "keyword": "PET PETS",
      "text": "You can buy pets in the pet shop.  You may own only one pet at a time, after \n
              |the old one dies you may purchase a replacement.\n
              |\n
              |New pets are planned for a shop in New Thalos.\n"
    },
    {
      "keyword": "TICK",
      "text": "Many of the game actions are based upon interval timers, including combat,\n
              |most autonomous monster actions, hp/mana/move regeneration, spell duration,\n
              |weather, and area resetting.\n
              |\n
              |Of these timers, the hp/mana/move regeneration timer is popularly called the\n
              |'tick'.  Ticks on this mud average 30 seconds of real time, but the actual\n
              |amount varies randomly from 15 seconds to 45 seconds.\n
              |\n
              |Area resetting happens roughly every 3 minutes if no one is in the area; less\n
              |often (15 minutes) if some one is.  Also note that objects lying on the ground\n
              |will not be regenerated if anyone is in the area when it resets.\n"
    },
    {
      "keyword": "!",
      "text": "Syntax: !\n
              |\n
              |! repeats the last command you typed.\n"
    },
    {
      "keyword": "NORTH SOUTH EAST WEST UP DOWN",
      "text": "Syntax: north\n
              |Syntax: south\n
              |Syntax: east\n
              |Syntax: west\n
              |Syntax: up\n
              |Syntax: down\n
              |\n
              |Use these commands to walk in a particular direction.\n"
    },
    {
      "keyword": "CAST",
      "text": "Syntax: cast <spell> <target>\n
              |\n
              |Before you can cast a spell, you have to practice it.  The more you practice,\n
              |the higher chance you have of success when casting.  Casting spells costs mana.\n
              |The mana cost decreases as your level increases.\n
              |\n
              |The <target> is optional.  Many spells which need targets will use an\n
              |appropriate default target, especially during combat.\n
              |\n
              |If the spell name is more than one word, then you must quote the spell name.\n
              |Example: cast 'cure critic' frag.  Quoting is optional for single-word spells.\n
              |You can abbreviate the spell name.\n
              |\n
              |When you cast an offensive spell, the victim usually gets a saving throw.\n
              |The effect of the spell is reduced or eliminated if the victim makes the\n
              |saving throw successfully.\n
              |\n
              |See also the help sections for individual spells.\n"
    },
    {
      "keyword": "EXITS",
      "text": "Syntax: exits\n
              |\n
              |Tells you the visible exits of the room you are in.  Not all exits are visible.\n
              |You can use the 'bump' technique to find hidden exits.  (Try to walk in a\n
              |certain direction and see what you bump into).\n"
    },
    {
      "keyword": "DROP GET GIVE PUT TAKE",
      "text": "Syntax: drop <object>\n
              |Syntax: drop <amount> coins\n
              |Syntax: get  <object>\n
              |Syntax: get  <object> <container>\n
              |Syntax: give <object> <character>\n
              |Syntax: give <amount> coins <character>\n
              |Syntax: put  <object> <container>\n
              |\n
              |DROP drops an object, or some coins, on the ground.\n
              |\n
              |GET gets an object, either lying on the ground, or from a container, or even\n
              |from a corpse.  TAKE is a synonym for get.\n
              |\n
              |GIVE gives an object, or some coins, to another character.\n
              |\n
              |PUT puts an object into a container.\n
              |\n
              |DROP, GET and PUT understand the object names 'ALL' for all objects and\n
              |'ALL.object' for all objects with the same name.\n"
    },
    {
      "keyword": "EQUIPMENT INVENTORY",
      "text": "Syntax: equipment\n
              |Syntax: inventory\n
              |\n
              |EQUIPMENT lists your equipment (armor, weapons, and held items).\n
              |INVENTORY lists your inventory.\n"
    },
    {
      "keyword": "COMPARE",
      "text": "Syntax: compare <object-1> <object-2>\n
              |Syntax: compare <object>\n
              | \n
              |COMPARE compares two objects in your inventory.  If both objects are weapons,\n
              |it will report the one with the better average damage.  If both objects are\n
              |armor, it will report the one with the better armor class.\n
              | \n
              |COMPARE with one argument compares an object in your inventory to the object\n
              |you are currently wearing or wielding of the same type.\n
              | \n
              |COMPARE doesn't consider any special modifiers of the objects.\n"
    },
    {
      "keyword": "FLEE",
      "text": "Syntax: flee\n
              |Syntax: rescue   <character>\n
              |\n
              |Once you start a fight, you can't just walk away from it.  If the fight\n
              |is not going well, you can attempt to FLEE, or another character can\n
              |RESCUE you.  (You can also RECALL, but this is less likely to work,\n
              |and costs more experience points, then fleeing).\n
              |\n
              |If you lose your link during a fight, then your character will keep\n
              |fighting, and will attempt to RECALL from time to time.  Your chances\n
              |of making the recall are reduced, and you will lose much more experience.\n"
    },
    {
      "keyword": "EXAMINE LOOK",
      "text": "Syntax: look\n
              |Syntax: look    <object>\n
              |Syntax: look    <character>\n
              |Syntax: look    <direction>\n
              |Syntax: look    <keyword>\n
              |Syntax: look in <container>\n
              |Syntax: look in <corpse>\n
              |Syntax: examine <container>\n
              |Syntax: examine <corpse>\n
              |\n
              |LOOK looks at something and sees what you can see.\n
              |\n
              |EXAMINE is short for 'LOOK container' followed by 'LOOK IN container'.\n"
    },
    {
      "keyword": "ORDER",
      "text": "Syntax: order <character> command\n
              |Syntax: order all command\n
              |\n
              |ORDER orders one or all of your charmed followers (including pets) to\n
              |perform any command.  The command may have arguments.  You are responsible\n
              |for the actions of your followers, and others who attack your followers\n
              |will incur the same penalty as if they attacked you directly.\n
              |\n
              |Most charmed creatures lose their aggresive nature (while charmed).\n
              |\n
              |If your charmed creature engages in combat, that will break the charm.\n"
    },
    {
      "keyword": "REST SLEEP STAND WAKE",
      "text": "Syntax: rest\n
              |Syntax: sleep\n
              |Syntax: stand\n
              |Syntax: wake\n
              |\n
              |These commands change your position.  When you REST or SLEEP, you \n
              |regenerate hit points, mana points, and movement points faster.\n
              |However, you are more vulnerable to attack, and if you SLEEP,\n
              |you won't hear many things happen.\n
              |\n
              |Use STAND or WAKE to come back to a standing position.  You can\n
              |also WAKE other sleeping characters.\n"
    },
    {
      "keyword": "GTELL ; REPLY SAY TELL",
      "text": "Syntax: gtell <message>\n
              |Syntax: say   <message>\n
              |Syntax: tell  <character> <message>\n
              |\n
              |All of these commands send messages to other players.  GTELL sends a message to\n
              |all of the characters in your group, wherever they are, even if they are\n
              |sleeping or stunned or dying.  ';' is a synonym for GTELL.\n
              |\n
              |SAY sends a message to all awake players in your room.  The single quote '''\n
              |is a synonym for SAY.\n
              |\n
              |TELL sends a message to one awake player anywhere in the world.\n
              |\n
              |REPLY sends a message to the last player who sent you a TELL.  REPLY will work\n
              |even if you can't see the player, and without revealing their identity.  This\n
              |is handy for talking to invisible or switched immortal players.\n"
    },
    {
      "keyword": "NOTE 'NOTE WRITE' 'NOTE READ' BOARD 'NOTE SYSTEM' BOARDS",
      "text": "Syntax:\n
              |\n
              |board [number|name]                     Shows or changes board.\n
              |note                                    Reads next note.\n
              |note read [number]                      Reads a certain note.\n
              |note remove <number>                    Removes a note written by you.\n
              |note list [number]                      Shows up to number notes.\n
              |note write                              Posts a note.\n
              |note catchup                            Marks all notes in this board read.\n
              |\n
              |These commands are used for the new note system. Instead of just one board, \n
              |there are several, each with its special purpose. \n
              |\n
              |Changing between the boards is accomplished using the BOARD command. BOARD\n
              |without any arguments gives you a list of all boards together with number of\n
              |unread message. To change, type BOARD <number> or BOARD <name of the board>.\n
              |\n
              |To read next unread note, type NOTE. To read a note with a specified number,\n
              |type NOTE READ <number>. Typing NOTE while in a board with no unread notes\n
              |shifts you to the next board. Note that unlike the standard note system, a \n
              |note has the same number in NOTE LIST and NOTE READ.\n
              |\n
              |Posting a message is as simple as writing NOTE WRITE. You will be moved \n
              |into interactive mode, where all you see are prompts for the fields like \n
              |To:, From: etc. You will be automatically put AFK while writing a note.\n
              |\n
              |To see the list of the notes in the current board, type NOTE LIST. Typing\n
              |NOTE LIST <number> will list only <number> of the last notes in the area.\n
              |\n
              |You can remove your own note by using NOTE REMOVE <number>. Implementors may\n
              |remove other people's notes. Implementors can also select how many days\n
              |their note is kept before being purged. Purging happens automatically at\n
              |bootup. Purged notes are not deleted, but saved into a file.\n
              |\n
              |To let only immortals see your note, address it to \"imm\". To let players of\n
              |a specific level and above, address it to that level (no other recipients may\n
              |appear in that case).\n
              |\n
              |This board system was created by Erwin S. Andreasen, erwin@pip.dknet.dk, aka\n
              |Phunk/Drylock and is freely available. The general outlook was based on\n
              |Mystic Adventure's note system (mud.gel.ulaval.ca 4000).\n"
    },
    {
      "keyword": "GOSSIP CGOSSIP . SHOUT YELL",
      "text": "Syntax: gossip  <message>\n
              |Syntax: cgossip <message>\n
              |Syntax: shout   <message>\n
              |Syntax: yell    <message>\n
              |\n
              |SHOUT sends a message to all awake players in the world.  To curb excessive\n
              |shouting, SHOUT imposes a three-second delay on the shouter.\n
              |\n
              |GOSSIP and CGOSSIP are variants of SHOUT (without the delay).  '.' is a \n
              |synonym for GOSSIP.\n
              |\n
              |YELL sends a message to all awake players within your area.\n
              |\n
              |Type a channel name by itself to turn it off.\n"
    },
    {
      "keyword": "EMOTE PMOTE POSE SOCIAL",
      "text": "Syntax: emote <action>\n
              |Syntax: pose\n
              |\n
              |EMOTE is used to express emotions or actions.  Besides EMOTE, there are\n
              |several dozen built-in social commands, such as CACKLE, HUG, and THANK\n
              |(type socials or help socials for a listing).\n
              |\n
              |PMOTE is similar to emote, but will substitute you and your for a target's\n
              |name (i.e. pmote bonks Alander will be read as bonks you by Alander, and\n
              |as bonks Alander by everyone else).\n
              |\n
              |POSE produces a random message depending on your class and level.\n"
    },
    {
      "keyword": "SMOTE",
      "text": "Syntax: smote <action>\n
              |\n
              |Smote works exactly like pmote, except you must place your name somewhere in\n
              |the string, and it will show that string to everyone in the room.\n",
      "level": 52
    },
    {
      "keyword": "HOLD REMOVE WEAR WIELD",
      "text": "Syntax: hold   <object>\n
              |Syntax: remove <object>\n
              |Syntax: wear   <object>\n
              |Syntax: wear   all\n
              |Syntax: wield  <object>\n
              |\n
              |Three of these commands will take an object from your inventory and start using\n
              |it as equipment.  HOLD is for light sources, wands, and staves.  WEAR is for\n
              |armor.  WIELD is for weapons.\n
              |\n
              |WEAR ALL will attempt to HOLD, WEAR, or WIELD each suitable item in your\n
              |inventory.\n
              |\n
              |You may not be able to HOLD, WEAR, or WIELD an item if its alignment does not\n
              |match yours, if it is too heavy for you, or if you are not experienced enough\n
              |to use it properly.\n
              |\n
              |REMOVE will take any object from your equipment and put it back into your\n
              |inventory.\n"
    },
    {
      "keyword": "BUG TYPO",
      "text": "Syntax: bug <message>\n
              |Syntax: idea <message>\n
              |Syntax: typo <message>\n
              |\n
              |These commands will take your message and record it into a file as feedback\n
              |to the mud implementors.\n"
    },
    {
      "keyword": "CREDITS",
      "text": "Syntax: credits\n
              |\n
              |This command shows the list of the original Diku Mud implementors.\n"
    },
    {
      "keyword": "AREAS COMMANDS REPORT SCORE TIME",
      "text": "Syntax: areas\n
              |Syntax: commands\n
              |Syntax: report\n
              |Syntax: score\n
              |Syntax: time\n
              |Syntax: weather\n
              |\n
              |AREAS shows you a list of areas in the game.\n
              |\n
              |COMMANDS shows you all the commands in the game.\n
              |\n
              |REPORT shows your current statistics to you and also announces them to other\n
              |players in the room.  SCORE shows much more detailed statistics to you only.\n
              |Your ability scores are shown as true value(current value), so for example\n
              |Str: 15(23) means you have a 15 strength from training, but a 23 strength\n
              |from other factors (spells or items).\n
              |\n
              |TIME shows the game time, as well as the time the mud was last started,\n
              |and the current local time for the host computer.\n
              |\n
              |WEATHER shows the current game weather.\n"
    },
    {
      "keyword": "WHO",
      "text": "Syntax: who\n
              |Syntax: who <level-range>\n
              |Syntax: who <class or race>\n
              |Syntax: who <clan name>\n
              |Syntax: who <class or race> <level-range> <clan name>\n
              |\n
              |WHO shows the people currently in the game.  Some people may choose to\n
              |remain unseen and won't appear on the WHO\n
              | \n
              |WHO without any arguments shows all of the (visible) people currently playing.\n
              |\n
              |With arguments, WHO can show players of certain classes or levels.\n
              |For example:\n
              | \n
              |who 10          lists all players of level 10 or above\n
              |who 15 20       lists all players between level 15 and 20\n
              |who cleric      lists all clerics playing\n
              |who immortal    lists all immortals playing\n
              |who cleric 1 5  lists all clerics between levels 1 and 5\n
              |who elf cleric  lists all elven clerics\n
              |who demise e m  lists all elven mages in Demise (hi Alander!)\n
              |\n
              |Classes and races may be abbreviated.\n",
      "hide_keywords": true
    },
    {
      "keyword": "WHOIS",
      "text": "Syntax: whois <name>\n
              |The whois command identifies any user who matches the name given. For\n
              |example, 'whois a' shows all characters whose name begins with A.\n",
      "hide_keywords": true
    },
    {
      "keyword": "WHERE",
      "text": "Syntax: where\n
              |Syntax: where <character>\n
              |\n
              |WHERE without an argument tells you the location of visible players in the same\n
              |area as you are.\n
              |\n
              |WHERE with an argument tells you the location of one character with that name\n
              |within your area, including monsters.\n"
    },
    {
      "keyword": "HELP",
      "text": "Syntax: help\n
              |Syntax: help <keyword>\n
              |\n
              |HELP without any arguments shows a one-page command summary.\n
              |\n
              |HELP <keyword> shows a page of help on that keyword.  The keywords include\n
              |all the commands, spells, and skills listed in the game.\n"
    },
    {
      "keyword": "DESCRIPTION DESC",
      "text": "Syntax: description <string>\n
              |Syntax: description + <string>\n
              |Syntax: description - \n
              |\n
              |Sets your long description to the given string.  If the description string\n
              |starts with a '+', the part after the '+' is appended to your current\n
              |description, so that you can make multi-line descriptions. You can delete\n
              |lines by uses description -.\n"
    },
    {
      "keyword": "PASSWORD",
      "text": "Syntax: password <old-password> <new-password>\n
              |\n
              |PASSWORD changes your character's password.  The first argument must be\n
              |your old password.  The second argument is your new password.\n
              |\n
              |The PASSWORD command is protected against being snooped or logged.\n"
    },
    {
      "keyword": "TITLE",
      "text": "Syntax: title <string>\n
              |\n
              |Sets your title to a given string.\n
              |\n
              |The game supplies a title when your character is created and when you\n
              |advance a level.  You can use TITLE to set your title to something else.\n"
    },
    {
      "keyword": "WIMPY",
      "text": "Syntax: wimpy\n
              |Syntax: wimpy <number>\n
              |\n
              |WIMPY sets your wimpy value.  When your character takes damage that reduces\n
              |your hit points below your wimpy value, you will automatically attempt to flee.\n
              |You will only flee if your character is not in a wait state -- i.e. has not\n
              |been using combat commands like cast, trip and bash, and has not been\n
              |tripped or bash by an enemy.\n
              |\n
              |WIMPY with no argument sets your wimpy value to 20% of your maximum hit points.\n
              |\n
              |Some monsters are wimpy.\n"
    },
    {
      "keyword": "OPEN CLOSE LOCK UNLOCK PICK",
      "text": "Syntax: open   <object|direction>\n
              |Syntax: close  <object|direction>\n
              |Syntax: lock   <object|direction>\n
              |Syntax: unlock <object|direction>\n
              |Syntax: pick   <object|direction>\n
              |\n
              |OPEN and CLOSE open and close an object or a door.\n
              |\n
              |LOCK and UNLOCK lock and unlock a closed object or door.  You must have\n
              |the requisite key to LOCK or UNLOCK.\n
              |\n
              |PICK can open a lock without having the key.  In order to PICK successfully,\n
              |you must practice the appropriate skill.\n"
    },
    {
      "keyword": "DRINK EAT FILL POUR",
      "text": "Syntax: drink <object>\n
              |Syntax: eat   <object>\n
              |Syntax: fill  <object>\n
              |Syntax: pour  <object> out\n
              |Syntax: pour  <object> <object>\n
              |Syntax: pour  <object> <character>\n
              |\n
              |When you are thirsty, DRINK something.\n
              |\n
              |When you are hungry, EAT something.\n
              |\n
              |FILL fills a drink container with water.\n
              |\n
              |POUR transfers a liquid to a container, or empties one.\n
              |You can also pour from an object into something a character is holding.\n"
    },
    {
      "keyword": "BUY LIST SELL VALUE",
      "text": "Syntax: buy   <object>\n
              |Syntax: list\n
              |Syntax: sell  <object>\n
              |Syntax: value <object>\n
              |\n
              |BUY buys an object from a shop keeper.\n
              |When multiple items of the same name are listed, type 'buy n.item', where n\n
              |is the position of the item in a list of that name.  So if there are two\n
              |swords, buy 2.sword will buy the second. If you want to buy multiples of\n
              |an item, use an * (buy 5*pie will buy 5 pies).  These can be combined into\n
              |(for example) buy 2*2.shield, as long as the * is first.  \n
              |\n
              |LIST lists the objects the shop keeper will sell you.\n
              |List <name> shows you only objects of that name.\n
              |\n
              |SELL sells an object to a shop keeper.\n
              |\n
              |VALUE asks the shop keeper how much he, she, or it will buy the item for.\n"
    },
    {
      "keyword": "SACRIFICE",
      "text": "Syntax: sacrifice <object>\n
              |\n
              |SACRIFICE offers an object to Mota, who may reward you.\n
              |The nature of the reward depends upon the type of object.\n"
    },
    {
      "keyword": "SCROLL",
      "text": "Syntax: scroll\n
              |Syntax: scroll <number>\n
              |\n
              |This command changes the number of lines the mud sends you in a page (the \n
              |default is 24 lines).  Change this to a higher number for larger screen\n
              |sizes, or to 0 to disabling paging.\n"
    },
    {
      "keyword": "BRANDISH QUAFF RECITE ZAP",
      "text": "Syntax: brandish\n
              |Syntax: quaff    <potion>\n
              |Syntax: recite   <scroll> <target>\n
              |Syntax: zap      <target>\n
              |Syntax: zap\n
              |\n
              |BRANDISH brandishes a magical staff.  QUAFF quaffs a magical potion (as opposed\n
              |to DRINK, which drinks mundane liquids).  RECITE recites a magical scroll; the\n
              |<target> is optional, depending on the nature of the scroll.  ZAP zaps a\n
              |magical wand at a target.  If the target is not specified, and you are fighting\n
              |someone, then that character is used for a target.\n
              |\n
              |You must HOLD a wand or a staff before using BRANDISH or ZAP.\n
              |\n
              |All of these commands use up their objects.  Potions and scrolls have a single\n
              |charge.  Wands and staves have multiple charges.  When a magical object has no\n
              |more charges, it will be consumed.\n
              |\n
              |These commands may require an item skill to be succesful, see the help entries\n
              |on the skills scrolls, staves, and wands for more information.\n"
    },
    {
      "keyword": "CONSIDER",
      "text": "Syntax: consider <character>\n
              |\n
              |CONSIDER tells you what your chances are of killing a character.\n
              |Of course, it's only a rough estimate.\n"
    },
    {
      "keyword": "FOLLOW GROUP",
      "text": "Syntax: follow <character>\n
              |Syntax: group\n
              |Syntax: group <character>\n
              |\n
              |FOLLOW starts you following another character.  To stop following anyone else,\n
              |just FOLLOW <yourself>.\n
              |\n
              |GROUP <character> makes someone who is following you a member of your group.\n
              |Group members share experience points from kills and may use the GTELL and\n
              |SPLIT commands.  If anyone in your group is attacked, you will automatically\n
              |join the fight.\n
              |\n
              |If the <character> is already a member of your group, then GROUP will\n
              |kick out the <character> from your group.  Characters can also leave your\n
              |group by using a FOLLOW command to stop following you.\n
              |\n
              |GROUP with no argument shows statistics for each character in your group.\n
              |\n
              |You may FOLLOW and GROUP only with characters who are within five levels of\n
              |your own.\n"
    },
    {
      "keyword": "VISIBLE",
      "text": "VISIBLE cancels your hiding and sneaking, as well as any invisibility,\n
              |making you visible again.\n"
    },
    {
      "keyword": "QUIT RENT SAVE",
      "text": "Syntax: QUIT\n
              |Syntax: RENT ... not!\n
              |Syntax: SAVE\n
              |\n
              |SAVE saves your character and object.  The game saves your character every\n
              |15 minutes regardless, and is the preferred method of saving.  Typing save\n
              |will block all other command for about 20 seconds, so use it sparingly.\n
              |(90+ players all typing save every 30 seconds just generated too much lag)\n
              |\n
              |Some objects, such as keys and potions, may not be saved.\n
              |\n
              |QUIT leaves the game.  You may QUIT anywhere.  When you re-enter the game \n
              |you will be back in the same room.\n
              |\n
              |QUIT automatically does a SAVE, so you can safely leave the game with just one\n
              |command.  Nevertheless it's a good idea to SAVE before QUIT.  If you get into\n
              |the habit of using QUIT without SAVE, and then you play some other mud that\n
              |doesn't save before quitting, you're going to regret it.\n
              |\n
              |There is no RENT in this mud.  Just SAVE and QUIT whenever you want to leave.\n"
    },
    {
      "keyword": "RECALL /",
      "text": "Syntax: RECALL\n
              |\n
              |RECALL prays to Mota for miraculous transportation from where you are\n
              |back to the Temple of Midgaard.  '/' is a synonym for RECALL.\n
              |\n
              |If you RECALL during combat, you will lose experience (more than for fleeing),\n
              |and you will have a chance of failing (again, more than for fleeing).  This\n
              |chance is based on your recall skill, although a 100% recall does not \n
              |insure success.\n
              |\n
              |RECALL costs half of your movement points.\n
              |\n
              |RECALL doesn't work in certain god-forsaken rooms.  Characters afflicted by a\n
              |curse may not recall at all.\n"
    },
    {
      "keyword": "SPLIT",
      "text": "Syntax: SPLIT <silver> <gold>\n
              |\n
              |SPLIT splits some coins  between you and all the members of your\n
              |group who are in the same room as you.  It's customary to SPLIT\n
              |the loot after a kill.  The first argument is the amount of silver\n
              |the split (0 is acceptable), and the second gold (optional).\n
              |Examples:\n
              |split 30    --> split 30 silver\n
              |split 20 50 --> split 20 silver, 50 gold\n
              |split  0 10 --> split 10 gold\n",
      "hide_keywords": true
    },
    {
      "keyword": "STEAL",
      "text": "Syntax: STEAL coins <character>\n
              |Syntax: STEAL <object> <character>\n
              |\n
              |STEAL attempts to steal coins, or an object, from a character.\n
              |\n
              |There are penalties for using STEAL on other players.\n
              |\n
              |In order to STEAL successfully, you must practice the appropriate skill.\n"
    },
    {
      "keyword": "PRACTICE",
      "text": "Syntax: PRACTICE\n
              |Syntax: PRACTICE <skill|spell>\n
              |\n
              |PRACTICE without an argument tells you your current ability level in all\n
              |the skills and spells available to you.  You can check this anywhere.\n
              |\n
              |PRACTICE with an argument practice that skill or spell.  Your learning\n
              |percentage varies from 0% (unlearned) to a some maximum between 80% and 100%,\n
              |depending on your class.  You must be at a guild master to practice.\n
              |\n
              |The higher your intelligence, the more you will learn at each practice\n
              |session.  The higher your wisdom, the more practice sessions you will\n
              |have each time you gain a level.  Unused sessions are saved until you\n
              |do use them.\n"
    },
    {
      "keyword": "TRAIN",
      "text": "Syntax: train <str int wis dex con hp mana>\n
              |\n
              |TRAIN increases one of your attributes.  When you start the game, your\n
              |character has standard attributes based on your class, and several\n
              |initial training sessions.  You can increase your attributes by\n
              |using these sessions at a trainer (there are several in town).\n
              |\n
              |It takes one training session to improve an attribute, or to increase\n
              |mana or hp by 10.  You receive one session per level.\n
              |\n
              |The best attributes to train first are WIS and CON.  WIS gives you more\n
              |practice when you gain a level.  CON gives you more hit points.\n
              |In the long run, your character will be most powerful if you train\n
              |WIS and CON both to 18 before practising or training anything else.\n"
    },
    {
      "keyword": "ADVANCE",
      "text": "Syntax: advance <character> <level>\n
              |\n
              |ADVANCE sets a character's level to the specified value.  It is the\n
              |only way to create new immortal characters within the game.  ADVANCE\n
              |may also be used to demote characters.\n",
      "level": 60
    },
    {
      "keyword": "TRUST",
      "text": "Syntax: trust <character> <level>\n
              |\n
              |TRUST sets a character's trust to the specified level.  This is similar to\n
              |advancing the character for accessing immortal commands, but has no effect\n
              |on combat strength, et cetera.  You can give more trust to mortal (or\n
              |immortal) characters to give them access to more power without messing up\n
              |the character.  You can also restrict a player's trust to less than their\n
              |natural level.\n
              |\n
              |A trust of 0 means to use the character's natural level again.\n",
      "level": 60
    },
    {
      "keyword": "ALLOW BAN PERMBAN",
      "text": "Syntax: allow <site>\n
              |    ban <site> <newbies|all|permit>\n
              |    ban\n
              |\n
              |BAN <site> prohibits players from that site from logging in.  BAN with\n
              |no arguments lists the banned sites.  ALLOW <site> removes a site from\n
              |the ban list, if the remover is of equal or higher level than the banner.\n
              |\n
              |A site may have all players, new players, or non-permitted players (set\n
              |by editing the player file) banned, by changing the argument after the site.\n
              |*s may be used to ban either by suffix (*.edu), prefix (labmac*), or \n
              |content (*andrews*), but be careful not to accidently lock out too many\n
              |sites with a wildcard.  Bans do not save unless the permban command is used.\n",
      "level": 58
    },
    {
      "keyword": "REBOOT SHUTDOWN",
      "text": "Syntax: reboot\n
              |    shutdown\n
              |\n
              |Reboot shuts down the server.  When the normal 'startup' script is used\n
              |to control the server, a delay of fifteen seconds will ensue (to allow\n
              |old connections to die), followed by a reboot.\n
              |\n
              |Shutdown shuts down the server and prevents the normal 'startup' script\n
              |from restarting it.\n",
      "level": 59
    },
    {
      "keyword": "WIZLOCK NEWLOCK",
      "text": "Syntax: wizlock\n
              |    newlock\n
              |\n
              |Wizlock and newlock both block login attempts to ROM. Wizlock locks\n
              |out all non-gods (i.e. level less than 51), except for link-dead players who\n
              |are returning.  Newlock only locks out new character generation, typically\n
              |used for preventing a spammer from returning.  Wizlocking should be avoided,\n
              |and newlocking should be accompanied by mail or a note to the imps.\n
              |\n
              |A god must be at least Supreme level to wizlock the game.\n",
      "level": 56
    },
    {
      "keyword": "DENY",
      "text": "Syntax: deny <name>\n
              |\n
              |Deny locks a character out of a game permanently, rendering their character\n
              |name unusable.  It may only be removed by editing the file, for this reason\n
              |freeze is usually preferred.\n",
      "level": 59
    },
    {
      "keyword": "DISCONNECT",
      "text": "Syntax: disconnect <name>\n
              |\n
              |Disconnect breaks a player's link to the game, dumping them back to the telnet\n
              |prompt.  This is a non-lethal way of getting rid of spammers and annoying\n
              |players.\n",
      "level": 57
    },
    {
      "keyword": "FREEZE",
      "text": "Syntax: freeze <name>\n
              |\n
              |FREEZE <character> is a toggle which prevents a character from issuing any\n
              |commands at all. It can be removed from within the game, so freezing a \n
              |troublemaker is usually a better option than they deny command.\n",
      "level": 57
    },
    {
      "keyword": "FORCE",
      "text": "Syntax: force <character> <command>\n
              |Syntax: force all <command>\n
              |\n
              |FORCE forces one character to execute a command, except of course delete.\n
              |\n
              |Below level 57 (Deity) force can only be used on mobiles, and force all is\n
              |unavailable.  You also cannot 'force orc murder hugo', for example. \n
              |\n
              |FORCE 'all' forces all player characters to execute a command.\n
              |This is typically used for 'force all save'.\n",
      "level": 53
    },
    {
      "keyword": "SOCKETS",
      "text": "Syntax: sockets\n
              |    sockets <name> \n
              |\n
              |SOCKETS reports all of the visible users connected to the server, including \n
              |users in the process of logging in.  The two numbers inside brackets are the \n
              |channel number and the 'connected' state.  The 'connected' states are listed in \n
              |merc.h: 0 is CON_PLAYING; non-zero values are various states of logging in.\n
              |\n
              |The optional name argument shows the site of a player, or optional can be used\n
              |to identify switched gods (i.e. socket orc shows the name of anyone switched\n
              |into an orc).\n",
      "level": 56
    },
    {
      "keyword": "LOAD",
      "text": "Syntax: load mob <vnum>\n
              |    load obj <vnum> <level>\n
              |\n
              |The load command is used to load new objects or mobiles (use clone to \n
              |duplicate strung items and mobs).  The vnums can be found with the vnum\n
              |command, or by stat'ing an existing mob or object.\n
              |\n
              |Load puts objects in inventory if they can be carried, otherwise they are\n
              |put in the room.  Mobiles are always put into the same room as the god. Old\n
              |format objects must be given a level argument to determine their power, new\n
              |format objects have a preset level that cannot be changed without set.\n
              |(see also clone, vnum, stat)\n",
      "level": 56
    },
    {
      "keyword": "SET",
      "text": "Syntax: set mob <mobile> <field> <value>\n
              |    set obj   <object> <field> <value>\n
              |    set room  <number> <field> <value>\n
              |    set skill <char>   <name>  <rating>\n
              |    set skill <char>   all     <rating>\n
              |\n
              |The set command is used to change the numerical values of the various data\n
              |structures. Type set <class> without an argument to see a listing of options.\n
              |Set skill all (pc's only) will set all the character's skills to the value\n
              |given.  Use string to change the strings on an object or mobile.\n
              |(see also string, stat)\n",
      "level": 58
    },
    {
      "keyword": "STRING",
      "text": "Syntax: string obj <field> <string>\n
              |    string mob <field> <string>\n
              |\n
              |The string command changes the various strings associated with an object or\n
              |mobile.  A full list of fields can be viewed by typing string obj or string\n
              |mob.  Sorry, multi-line strings are not yet supported.\n",
      "level": 55
    },
    {
      "keyword": "NOCHANNEL NOEMOTE NOSHOUT NOTELL",
      "text": "Syntax: nochannel <character>\n
              |    noemote <character>\n
              |    noshout <character>\n
              |    notell  <character>\n
              |\n
              |Noemote, noshout, and notell are used to muffle other characters, by\n
              |preventing them from emoting, shouting, and telling, respectively.\n
              |Characters who are noshout'ed or no'telled will also not receive those\n
              |forms of communication.\n
              |\n
              |The nochannel command is similar, but more drastic. It prevents the victim\n
              |from using any of the channels (gossip, cgossip, Q/A, music) on the game.\n
              |Nochannels usually result from swearing or spamming on public channels.\n",
      "level": 55
    },
    {
      "keyword": "PARDON",
      "text": "Syntax: pardon <character> killer\n
              |    pardon <character> thief\n
              |\n
              |Pardon pardons a player for their crimes.  Don't pardon a player unless you\n
              |are sure they deserve it.  Being killed by Hassan acts as an automatic\n
              |pardon.\n",
      "level": 57
    },
    {
      "keyword": "PURGE",
      "text": "Syntax: purge\n
              |    purge <character>\n
              |\n
              |Purge is used to clean up the world.  Purge with no arguments removes all the\n
              |NPC's and objects in the current room.  Purge with an argument purges one\n
              |character from anywhere in the world.\n
              |\n
              |Purge will not get rid of PC's, or objects or mobiles with a NOPURGE flag\n
              |set (i.e. the pit, the fountain, shopkeepers, Hassan).  Mobiles may be\n
              |purged if they are called directly by name.\n",
      "level": 56
    },
    {
      "keyword": "RESTORE",
      "text": "Syntax: restore <character>\n
              |    restore room\n
              |    restore all\n
              |\n
              |Restore restores full hit points, mana points, and movement points to the\n
              |target character.  It also heals poison, plague, and blindness.\n
              |\n
              |Restore room (or restore with no argument) performs a restore on every player\n
              |in the room, restore all does the same for all connected players. Restore all\n
              |is only usable by creators and implementors.  Restore should be used sparingly\n
              |or not at all.\n",
      "level": 56
    },
    {
      "keyword": "SLAY",
      "text": "Syntax: slay <character>\n
              |\n
              |Slay kills a character in cold blood, no saving throw.  Best not to use this\n
              |command on players if you enjoy being a god.\n",
      "level": 57
    },
    {
      "keyword": "TRANSFER TELEPORT",
      "text": "Syntax: transfer <character>\n
              |    transfer all\n
              |    transfer <character> <location>\n
              |    transfer all         <location>\n
              |\n
              |Transfer transfers the target character, or ALL player characters,\n
              |to your current location (default) or to a specified location. Trans all \n
              |should almost never be used, as 100 players popping into one room can have\n
              |horrible effects on slow links. Teleport is a synonym for transfer. \n",
      "level": 55
    },
    {
      "keyword": "AT",
      "text": "Syntax: at <location> <command>\n
              |\n
              |At executes the given command (which may have arguments) at the given\n
              |location.  The location may be specified as a vnum, as the name of\n
              |a mobile, or as the name of an object.\n
              |\n
              |At works by temporarily moving you to that location, executing the\n
              |command, and then moving you back (if the command didn't change your\n
              |location).\n",
      "level": 54
    },
    {
      "keyword": "ECHO GECHO PECHO",
      "text": "Syntax: echo <message>\n
              |    gecho <message>\n
              |    pecho <character> <message>\n
              |\n
              |These commands all perform similar functions.  Echo sends the message to\n
              |all characters in the same room as the user, with no indication of who sent\n
              |it.  Gecho does the same for all players connected to the game, and pecho\n
              |sends the message to the player specified as the target.  Any higher-level\n
              |god will see a prompt in front of your message, informing him or her that it\n
              |is an echo.\n",
      "level": 54
    },
    {
      "keyword": "GOTO",
      "text": "Syntax: goto <location>\n
              |\n
              |Goto takes you to a location.  The location may be specified as a vnum,\n
              |as the name of a mobile, or as the name of an object.\n
              |\n
              |You may not Goto a room if it is PRIVATE and has two (or more) characters\n
              |already present, or if it is SOLITARY and has one (or more) characters\n
              |already present. Some other rooms are barred to players below a certain\n
              |god level.\n
              |\n
              |Implementors can use the violate command to get into private rooms.\n",
      "level": 52
    },
    {
      "keyword": "HOLYLIGHT INVIS WIZINVIS",
      "text": "Syntax: holylight\n
              |    wiznvis <level>\n
              |\n
              |Holylight is a toggle that allows you to see (almost) every character and\n
              |mobile in the game.  With holy light, you can see what's in the game more\n
              |easily.  Without holy light, you can see what mortal players see.\n
              |\n
              |Wizinvis takes a level argument, and will mke you invisible to all players of\n
              |a lower level than your invisibility level.  It defaults to the maximum\n
              |(your level) if no argument is given.  Wizi 60 characters are totally \n
              |invisible.\n",
      "level": 52
    },
    {
      "keyword": "INCOGNITO",
      "text": "Toggling your incognito status will hide your presence from people outside the\n
              |room you are in, but leave you visible to those who are with you.  It takes\n
              |a level argument similar to wizinvis, people at that level or higher can see\n
              |you regarless of location.\n",
      "level": 52
    },
    {
      "keyword": "MEMORY",
      "text": "Syntax: memory\n
              |\n
              |Memory reports the size of your mud.\n
              |\n
              |The 'Mobs' and 'Objs' lines report the number of types of mobiles and objects,\n
              |not the number of instances currently in the game.\n
              |\n
              |The 'Strings' line shows memory used by area-file strings.  These strings have\n
              |a maximum limit, which is also shown.\n
              |\n
              |The 'Perms' line shows permanently allocated memory blocks.  There is no limit\n
              |on the number and size of these blocks.\n",
      "level": 52
    },
    {
      "keyword": "VNUM",
      "text": "Syntax: vnum <name>\n
              |    vnum <obj or mob> <name>\n
              |    vnum skill <name>\n
              |\n
              |Vnum finds all objects and mobiles with a particular name, and prints out\n
              |the results.  Use vnum obj or vnum mob to limit the search.  This vnum is\n
              |very useful for loading. Vnum skill returns the skill number (for set) and\n
              |the slot number (for making new zones) of a skill name.\n
              |(see also load)\n",
      "level": 56
    },
    {
      "keyword": "STAT",
      "text": "Syntax: stat <name>\n
              |    stat mob  <name>\n
              |    stat obj  <name>\n
              |    stat room <number>\n
              |\n
              |The stat command gives you detailed information on an object, mobile, or room\n
              |within the game.  Without a class argument, the command will return a object\n
              |(if found), a mobile (if no object exists, but a mobile does), or a room \n
              |(if a number is  given).  Stat room with no argument stats the room you are\n
              |standing in.  Stat can be used to find room vnums for goto.\n
              |(see also goto, transfer)\n",
      "level": 53
    },
    {
      "keyword": "MWHERE",
      "text": "Syntax: mwhere <name>\n
              |\n
              |Mwhere shows you the locations of all mobiles with a particular name.\n",
      "level": 53
    },
    {
      "keyword": "PEACE",
      "text": "Syntax: peace\n
              |\n
              |Peace causes all characters in a room to stop fighting. It also strips the\n
              |AGGRESSIVE bit from mobiles.\n",
      "level": 55
    },
    {
      "keyword": "POOFIN POOFOUT",
      "text": "Syntax: poofin  <message>\n
              |Syntax: pooffout <message>\n
              |\n
              |The standard messages for goto are 'arrives in a swirling mist' and\n
              |'leaves in a swirling mist'.  You can replace these messages with messages of\n
              |your own choosing using the poofin and poofout commands.  These messages\n
              |must include your name somewhere in the string.\n
              |\n
              |Poofin and poofout only show to characters who can see you.\n
              |(see also goto)\n",
      "level": 52
    },
    {
      "keyword": "PROTECT",
      "text": "Syntax: protect <character>\n
              |\n
              |Protect is used to protect a character from unwanted snooping.  Removing \n
              |protected status from a character WILL be seen by that character.\n",
      "level": 59
    },
    {
      "keyword": "LOG SNOOP",
      "text": "Syntax: log <character>\n
              |    log   all\n
              |    snoop <character>\n
              |\n
              |Log <character> causes all of a character's commands to be logged into\n
              |the server's log file.  Like Freeze, it is a permanent character toggle.\n
              |Logs may only be used by creators and implementors, and should be accompanied\n
              |by mail to the implementors.\n
              |\n
              |Certain commands (Password) are protected against log.  Conversely, certain\n
              |commands (especially immortal commands) are always logged.\n
              |\n
              |Log all logs all character commands.  It is a server-wide toggle; it does not\n
              |persist across reboots. Please do not use this unless you tell the imps.\n
              |\n
              |Snoop shows you a copy of all the input and output going to a character.\n
              |The character must have an open channel.  You may snoop more than one\n
              |character at a time. Try to respect privacy.\n
              |\n
              |Snoop yourself to cancel all outstanding snoops.\n",
      "level": 55
    },
    {
      "keyword": "SWITCH RETURN",
      "text": "Syntax: switch <character>\n
              |    return\n
              |\n
              |Switch switches you into the body of another character (who must not\n
              |already have a descriptor, e.g. you can't switch into a PC). You also cannot\n
              |switch into link-dead PCs.\n
              |\n
              |Return returns you to your original body.\n",
      "level": 54
    },
    {
      "keyword": "IMMTALK :",
      "text": "Syntax: immtalk <message>\n
              |    immtalk\n
              |\n
              |Immtalk sends a message to all immortals.  : is a synonym for immtalk.\n
              |Using this command with no argument turns off the immortal channel (or\n
              |turns it back on).\n",
      "level": 51
    },
    {
      "keyword": "WIZNET",
      "text": "Syntax: wiznet \n
              |    wiznet show\n
              |    wiznet status\n
              |    wiznet <field>\n
              |\n
              |Wiznet is sort of an immortal news service, to show important events to\n
              |the wiznetted immoral.  Wiznet by itself turns wiznet on and off, \n
              |wiznet show lists all settable flags (they are not detailed here), \n
              |wiznet status shows your current wiznet settings, and wiznet <field> toggles\n
              |a field on and off.  The events should be self-explanatory, if they are not,\n
              |fiddle with them a while.  More events are available at higher levels.\n",
      "level": 52
    },
    {
      "keyword": "WIZHELP",
      "text": "Syntax: wizhelp\n
              |\n
              |Wizhelp provides a list of all the immortal commands.\n",
      "level": 51
    },
    {
      "keyword": "ARMOR",
      "text": "Syntax: cast armor <character>\n
              |\n
              |This spell decreases (improves) the armor class of the target character\n
              |by 20 points.\n"
    },
    {
      "keyword": "BLESS",
      "text": "Syntax: cast bless <character>\n
              |Syntax: cast bless <object>\n
              |\n
              |This spell improves the to-hit roll and saving throw versus spell of the\n
              |target character by 1 for every 8 levels of the caster. It may also be\n
              |cast on an object to temporarily bless it (blessed weapons, for example,\n
              |are more effective against demonic beings).\n"
    },
    {
      "keyword": "BLINDNESS",
      "text": "Syntax: cast blindness <victim>\n
              |\n
              |This spell renders the target character blind.\n"
    },
    {
      "keyword": "'ACID BLAST' 'BURNING HANDS' 'COLOUR SPRAY' FIREBALL 'LIGHTNING BOLT'\n
                 |  'MAGIC MISSILE' 'SHOCKING GRASP'",
      "text": "Syntax: cast 'acid blast'     <victim>\n
              |Syntax: cast 'burning hands'  <victim>\n
              |Syntax: cast 'colour spray'   <victim>\n
              |Syntax: cast 'fireball'       <victim>\n
              |Syntax: cast 'lightning bolt' <victim>\n
              |Syntax: cast 'magic missile'  <victim>\n
              |Syntax: cast 'shocking grasp' <victim>\n
              |\n
              |These spells inflict damage on the victim.  The higher-level spells do\n
              |more damage.\n"
    },
    {
      "keyword": "'CALL LIGHTNING'",
      "text": "Syntax: cast 'call lightning'\n
              |\n
              |This spell works only out of doors, and only when the weather is bad.\n
              |It calls down lightning bolts from Mota.\n"
    },
    {
      "keyword": "'CAUSE LIGHT' 'CAUSE SERIOUS' 'CAUSE CRITICAL' HARM",
      "text": "Syntax: cast 'cause light'    <victim>\n
              |Syntax: cast 'cause serious'  <victim>\n
              |Syntax: cast 'cause critical' <victim>\n
              |Syntax: cast harm             <victim>\n
              |\n
              |These spells inflict damage on the victim.  The higher-level spells do\n
              |more damage.\n"
    },
    {
      "keyword": "'CHANGE SEX'",
      "text": "Syntax: cast 'change sex' <victim>\n
              |\n
              |This spell changes the sex of the victim (temporarily).\n",
      "level": 53
    },
    {
      "keyword": "'CHARM PERSON'",
      "text": "Syntax: cast 'charm person' <victim>\n
              |\n
              |This spell, if successful, causes the victim to follow you and to take orders\n
              |from you.  Use ORDER to order your charmed followers.\n
              |\n
              |You are responsible for the actions of your followers.  Conversely, other\n
              |people who attack your followers will be penalized as if they attacked you.\n"
    },
    {
      "keyword": "'CHILL TOUCH'",
      "text": "Syntax: cast 'chill touch' <victim>\n
              |\n
              |This spell inflicts damage on the victim and also reduces the victim's\n
              |strength by one.\n"
    },
    {
      "keyword": "'CONTINUAL LIGHT'",
      "text": "Syntax: cast 'continual light'\n
              |Syntax: cast 'continual light' <object>\n
              |\n
              |This spell creates a ball of light, which you can hold as a light source.\n
              |The ball of light will last indefinitely. It may also be used on an object\n
              |to give it an enchanted glow.\n"
    },
    {
      "keyword": "'CONTROL WEATHER'",
      "text": "Syntax: cast 'control weather' better\n
              |Syntax: cast 'control weather' worse\n
              |\n
              |This spell makes the weather either better or worse.\n"
    },
    {
      "keyword": "'CREATE FOOD'",
      "text": "Syntax: cast 'create food'\n
              |\n
              |This spell creates a Magic Mushroom, which you or anyone else can eat.\n"
    },
    {
      "keyword": "'CREATE SPRING'",
      "text": "Syntax: cast 'create spring'\n
              |\n
              |This spell brings forth a magical spring from the ground, which has the\n
              |same properties as a fountain.\n"
    },
    {
      "keyword": "'CREATE WATER'",
      "text": "Syntax: cast 'create water' <drink-container>\n
              |\n
              |This spell replenishes a drink container with water.\n"
    },
    {
      "keyword": "'CURE BLINDNESS'",
      "text": "Syntax: cast 'cure blindness' <character>\n
              |\n
              |This spell cures blindness in one so unfortunate.\n"
    },
    {
      "keyword": "'CURE POISON'",
      "text": "Syntax: cast 'cure poison' <character>\n
              |\n
              |This spell cures poison in one so unfortunate.\n"
    },
    {
      "keyword": "'CURE LIGHT' 'CURE SERIOUS' 'CURE CRITICAL' HEAL",
      "text": "Syntax: cast 'cure light'    <character>\n
              |Syntax: cast 'cure serious'  <character>\n
              |Syntax: cast 'cure critical' <character>\n
              |Syntax: cast 'heal'          <character>\n
              |\n
              |These spells cure damage on the target character.  The higher-level spells\n
              |heal more damage.\n
              |\n
              |(see 'help healer' for details on the heal command)\n"
    },
    {
      "keyword": "CURSE",
      "text": "Syntax: cast 'curse' <character>\n
              |\n
              |This spell reduces the character's to-hit roll and save versus spells.\n
              |It also renders the character unclean in the eyes of Mota and\n
              |unable to RECALL. Curse may be used to fill equipment with evil power,\n
              |allowing (for example) weapons to do more damage to particularly holy\n
              |opponents.\n"
    },
    {
      "keyword": "'DETECT EVIL'",
      "text": "Syntax: cast 'detect evil'\n
              |\n
              |This spell enables the caster to detect evil characters, which will\n
              |reveal a characteristic red aura.\n"
    },
    {
      "keyword": "'DETECT HIDDEN'",
      "text": "Syntax: cast 'detect hidden'\n
              |\n
              |This spell enables the caster to detect hidden creatures.\n"
    },
    {
      "keyword": "'DETECT INVIS'",
      "text": "Syntax: cast 'detect invis'\n
              |\n
              |This spell enables the caster to detect invisible objects and characters.\n"
    },
    {
      "keyword": "'DETECT MAGIC'",
      "text": "Syntax: cast 'detect magic'\n
              |\n
              |This spell enables the caster to detect magical objects.\n"
    },
    {
      "keyword": "'DETECT POISON'",
      "text": "Syntax: cast 'detect poison' <object>\n
              |\n
              |This spell detects the presence of poison in food or drink.\n"
    },
    {
      "keyword": "'DISPEL EVIL'",
      "text": "Syntax: cast 'dispel evil' <victim>\n
              |\n
              |This spell invokes the wrath of Mota on an evil victim. It can be very\n
              |dangerous for casters who are not pure of heart.\n"
    },
    {
      "keyword": "'DISPEL MAGIC' CANCELLATION",
      "text": "Syntax: cast 'dispel magic' <character>\n
              |        cast 'cancellation' <characte>\n
              | \n
              |Both of these spells remove magical effects from the target.  Dispel magic\n
              |has a reduced chance of working, and is considering an attack spell.\n
              |Cancellation can only be used on allies, but is much more effective and does\n
              |not provoke attack.  Unfortunately, the spells do not discriminate between\n
              |harmful and benign spells.\n
              | \n
              |The chance of dispelling is based on the level of the spell. Permanent spells\n
              |(such as mobile sanctuary) are much harder to remove.  Not all spells may\n
              |be dispelled, notable examples are poison and plague.\n"
    },
    {
      "keyword": "EARTHQUAKE",
      "text": "Syntax: cast 'earthquake'\n
              |\n
              |This spell inflicts damage on every enemy character in the room.\n
              |Beware that other characters who are not yet fighting may attack\n
              |you as a result!\n"
    },
    {
      "keyword": "'ENCHANT WEAPON'",
      "text": "Syntax: cast 'enchant weapon' <weapon>\n
              |\n
              |This spell magically enchants a weapon, increasing its to-hit and to-dam\n
              |bonuses by one or two points.  Multiple enchants may be cast, but as the\n
              |weapon grows more and more powerful, it is more likely to be drained or\n
              |destroyed by the magic.  Also, every successful enchant increases the level\n
              |of the weapon by one...and there is no turning back.\n"
    },
    {
      "keyword": "'ENCHANT ARMOR'",
      "text": "The enchant armor spell imbues armor with powerful protective magics. It is\n
              |not nearly as reliable as enchant weapon, being far more prone to destructive\n
              |effects.  Each succesful enchant increases the plus of the armor by 1 or 2\n
              |points, and raises its level by one.\n",
      "hide_keywords": true
    },
    {
      "keyword": "'ENERGY DRAIN'",
      "text": "Syntax: cast 'energy drain' <victim>\n
              |\n
              |This spell saps the experience points, mana, and movement points of its\n
              |target.\n"
    },
    {
      "keyword": "'FAERIE FIRE'",
      "text": "Syntax: cast 'faerie fire' <victim>\n
              |\n
              |This spell increases (makes worse) the armor class of its victim.  For each\n
              |level of the caster, the victim's armor class is increased by two points.\n"
    },
    {
      "keyword": "'FAERIE FOG'",
      "text": "Syntax: cast 'faerie fog'\n
              |\n
              |This spell reveals all manner of invisible, hidden, and sneaking creatures in\n
              |the same room as you.\n"
    },
    {
      "keyword": "FLAMESTRIKE",
      "text": "Syntax: cast 'flamestrike' <victim>\n
              |\n
              |This spell inflicts damage on the victim.\n"
    },
    {
      "keyword": "FLY",
      "text": "Syntax: cast 'fly' <character>\n
              |\n
              |This spell enables the target character to fly.\n"
    },
    {
      "keyword": "IDENTIFY",
      "text": "Syntax: cast identify <object>\n
              |\n
              |This spell reveals information about the object.\n"
    },
    {
      "keyword": "INFRAVISION",
      "text": "Syntax: cast infravision <character>\n
              |\n
              |This spell enables the target character to see warm-blooded creatures even\n
              |while in the dark, and exits of a room as well.\n"
    },
    {
      "keyword": "INVIS 'MASS INVIS' INVISIBLITY",
      "text": "Syntax: cast 'invisibility' <character>\n
              |Syntax: cast 'invisibility' <object>\n
              |Syntax: cast 'mass invis'\n
              |\n
              |The INVIS spell makes the target character invisible.  Invisible characters\n
              |will become visible when they attack. It may also be cast on an object\n
              |to render the object invisible.\n
              |\n
              |The MASS INVIS spell makes all characters in the caster's group invisible,\n
              |including the caster.\n"
    },
    {
      "keyword": "'KNOW ALIGNMENT'",
      "text": "Syntax: cast 'know alignment' <character>\n
              |\n
              |This spell reveals the alignment of the target character.\n"
    },
    {
      "keyword": "'LOCATE OBJECT'",
      "text": "Syntax: cast 'locate object' <name>\n
              |\n
              |This spell reveals the location of all objects with the given name.\n"
    },
    {
      "keyword": "'PASS DOOR'",
      "text": "Syntax: cast 'pass door'\n
              |\n
              |This spell enables the caster to pass through closed doors.\n"
    },
    {
      "keyword": "POISON",
      "text": "Syntax: cast poison <victim>\n
              |Syntax: cast poison <object>\n
              |\n
              |This spell reduces the strength of the victim by two, as well as reducing the\n
              |victim's regeneration rate. It may also be used to poison food, drink, or\n
              |a weapon in a fashion similar to envenom ('help envenom'), but with \n
              |drastically reduced effectiveness.\n"
    },
    {
      "keyword": "SANCTUARY",
      "text": "Syntax: cast sanctuary  <character>\n
              |\n
              |The SANCTUARY spell reduces the damage taken by the character from any attack\n
              |by one half.\n"
    },
    {
      "keyword": "REFRESH",
      "text": "Syntax: cast refresh <character>\n
              |\n
              |This spell refreshes the movement points of a character who is out of movement\n
              |points.\n"
    },
    {
      "keyword": "'REMOVE CURSE'",
      "text": "Syntax: cast 'remove curse' <character>\n
              |Syntax: cast 'remove curse' <object>\n
              |\n
              |This spell removes a curse from a character, and might possibly uncurse\n
              |a cursed object.  It may also be targeted on an object in the caster's\n
              |inventory, in which case it's chance of success is significantly higher.\n"
    },
    {
      "keyword": "SHIELD 'STONE SKIN'",
      "text": "Syntax: cast shield\n
              |Syntax: cast 'stone skin'\n
              |\n
              |These spells protect the caster by decreasing (improving) the caster's armor\n
              |class.  SHIELD provides 20 points of armor.  STONE SKIN provides 40 points of\n
              |armor.\n"
    },
    {
      "keyword": "SLEEP",
      "text": "Syntax: cast sleep <victim>\n
              |\n
              |This spell puts its victim to sleep.\n"
    },
    {
      "keyword": "SUMMON",
      "text": "Syntax: cast summon <character>\n
              |\n
              |This spell summons a character from anywhere else in the world into your room.\n
              |Characters who are fighting may not be summoned.\n"
    },
    {
      "keyword": "TELEPORT",
      "text": "Syntax: cast <teleport>\n
              |\n
              |This spell takes you from your current location to a random location somewhere\n
              |in the world.\n"
    },
    {
      "keyword": "VENTRILOQUATE",
      "text": "Syntax: cast ventriloquate <speaker> <message>\n
              |\n
              |This spell throws your voice, making it appear that some other object or\n
              |character in the room is saying your message.  Victims who make their saving\n
              |throw will know that someone is using ventriloquism, but not who.  Victims who\n
              |fail their saving throw will think that the object or character really did say\n
              |your message.\n"
    },
    {
      "keyword": "WEAKEN",
      "text": "Syntax: cast weaken <victim>\n
              |\n
              |This spell reduces the strength of the victim by two points.\n"
    },
    {
      "keyword": "'WORD OF RECALL'",
      "text": "Syntax: cast 'word of recall'\n
              |\n
              |This spell duplicates the built-in RECALL ability.  It is provided solely for\n
              |Merc-based muds which wish to eliminate the built-in ability while still\n
              |providing the spell.\n"
    },
    {
      "keyword": "'ACID BREATH' 'FIRE BREATH' 'FROST BREATH' 'GAS BREATH' 'LIGHTNING BREATH'",
      "text": "Syntax: cast 'acid breath'      <victim>\n
              |Syntax: cast 'fire breath'      <victim>\n
              |Syntax: cast 'frost breath'     <victim>\n
              |Syntax: cast 'gas breath'\n
              |Syntax: cast 'lightning breath' <victim>\n
              |\n
              |These spells are for the use of dragons.  Acid, fire, frost, and lightning\n
              |damage one victim, whereas gas damages every PC in the room.  Fire and\n
              |frost can break objects, and acid can damage armor.\n
              |\n
              |High level mages may learn and cast these spells as well.\n"
    }
  ]
}}]
